<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm.xsd"
                 version="2.1">
    <named-query name="sys.hql.queryRolesByGroupId">
        <query>
            <![CDATA[select r from SysRole as r, RelSysGroupRole as rel where r.id = rel.roleId and r.isEnabled = true and rel.groupId = :groupId]]>
        </query>
    </named-query>

    <named-query name="sys.hql.queryUsersByGroupId">
        <query>
            <![CDATA[select u from SysUser as u, RelSysUserGroup as rel where u.id = rel.userId and u.isEnabled = true and rel.groupId = :groupId]]>
        </query>
    </named-query>

    <named-query name="sys.hql.queryFuncsByGroupId">
        <query>
            <![CDATA[select f from SysFunc as f, SysRole as r, RelSysGroupRole as rel_gr, RelSysRoleFunc as rel_rf
         where f.id = rel_rf.funcId
            and f.isEnabled = true
            and rel_rf.roleId = r.id
            and r.isEnabled = true
            and rel_gr.roleId = r.id
            and rel_gr.groupId = :groupId]]>
        </query>
    </named-query>
    <named-query name="sys.hql.queryAllSysGroup">
        <query>
            <![CDATA[from SysGroup where isEnabled = true]]>
        </query>
    </named-query>
    <named-query name="sys.hql.querySysGroupByName">
        <query>
            <![CDATA[from SysGroup as s where 1=1
            and s.isEnabled = :isEnabled
            and (:name is null or (s.name like :name or s.desc like :desc ))
        ]]>
        </query>
    </named-query>

    <named-query name="sys.hql.queryCountAllSysGroup">
        <query>
            <![CDATA[select count(*) from SysGroup where isEnabled = true]]>
        </query>
    </named-query>
    <named-query name="sys.hql.queryCountSysGroupByName">
        <query>
            <![CDATA[select count(*) from SysGroup as s  where s.name like :name]]>
        </query>
    </named-query>
</entity-mappings>

<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm.xsd"
                 version="2.1">

    <named-query name="sys.hql.queryRolesByFuncId">
        <query>
            <![CDATA[select r from SysRole as r, RelSysRoleFunc as rel where r.id = rel.roleId and r.isEnabled = true and rel.funcId = :funcId]]>
        </query>
    </named-query>


    <!--通过父级菜单id  得到子级菜单。包括子类父类信息  -->
    <named-query name="sys.hql.queryParentByFuncId">
        <query>
            <![CDATA[from SysFunc as s left join fetch s.parent  where s.parent.id = :funcId and s.isEnabled = true order by  s.order desc]]>
        </query>
    </named-query>

    <!--通过父级菜单id  得到子级菜单。不包括子类父类信息  -->
    <named-query name="sys.hql.queryChildrenFuncByFuncId">
        <query>
            <![CDATA[from SysFunc as func where func.parent.id = :id and isEnabled = true order by func.order]]>
        </query>
    </named-query>

    <!--通过父类id判断是否存在下级机构  -->
    <named-query name="sys.hql.queryFuncChildrenCountByParentId">
        <query>
            <![CDATA[select count(*) from SysFunc as func where func.parent.id = :parentId and isEnabled = true]]>
        </query>
    </named-query>

    <!--通过字典id 得到菜单信息  -->
    <named-query name="sys.hql.querynFuncByFuncId">
        <query>
            <![CDATA[from SysFunc as func where func.id = :id and isEnabled = true]]>
        </query>
    </named-query>

    <named-query name="sys.hql.querySysFuncNameCount">
        <query>
            <![CDATA[select count(s) from SysFunc as s where isEnabled = true
         	or (:funcId is null or s.id = :funcId)
	        or (:name is null or s.name like :name)
	        or (:code is null or s.code like :code)]]>
        </query>
    </named-query>

    <named-query name="sys.hql.querySysFuncName">
        <query>
            <![CDATA[from SysFunc as s left join fetch s.parent  where s.isEnabled = true
         	or (:funcId is null or s.id = :funcId)
	        or (:name is null or s.name like :name)
	        or (:code is null or s.code like :code)]]>
        </query>
    </named-query>

    <named-query name="sys.hql.queryGroupsByFuncId">
        <query>
            <![CDATA[select g from SysGroup as g, SysRole as r, RelSysGroupRole as rel_gr, RelSysRoleFunc as rel_rf
         where g.id = rel_gr.groupId
            and g.isEnabled = true
            and rel_rf.roleId = r.id
            and r.isEnabled = true
            and rel_rf.roleId = r.id
            and rel_rf.funcId = :funcId]]>
        </query>
    </named-query>
    <named-query name="sys.hql.queryAllSysFuncGroup">
        <query>
            <![CDATA[from SysFunc where parent = 0 and isVisible = true  and isEnabled = true]]>
        </query>
    </named-query>

    <named-query name="sys.hql.queryAllSysFuncPage">
        <query>
            <![CDATA[from SysFunc as f where 1 = 1
            and (:pageQuery is null or f.name like :pageQuery)
            and (:isEnabled is null or f.isEnabled = :isEnabled)
            and (:parentId is null or f.parent.id = :parentId)  order by f.order
         ]]>
        </query>
    </named-query>
    <named-query name="sys.hql.queryFuncTotle">
        <query>
            <![CDATA[select count(*) from SysFunc as f where 1 = 1
            and (:pageQuery is null or f.name like :pageQuery)
            and (:isEnabled is null or f.isEnabled = :isEnabled)
            and (:parentId is null or f.parent.id = :parentId)
         ]]>
        </query>
    </named-query>

    <!--查询没有上级菜单为null的，也就是只有查询出一个：“功能菜单”  -->
    <named-query name="sys.hql.queryParentFuncIsNull">
        <query>
            <![CDATA[from SysFunc as sf  where sf.parent.id is null and sf.isEnabled = true]]>
        </query>
    </named-query>

    <!--根据code来判断是否存在此菜单了，存在就不能添加了-->
    <named-query name="sys.hql.querySysFuncByCode">
        <query>
            <![CDATA[select count(*) from SysFunc as sf  where sf.code =:code]]>
        </query>
    </named-query>
    <!--通过id得到菜单信息-->
    <named-query name="sys.hql.querySysFuncById">
        <query>
            <![CDATA[from SysFunc as sf  where sf.code =:code]]>
        </query>
    </named-query>

    <!--根据funcCode匹配菜单对象个数-->
    <named-query name="sys.hql.getFuncCountByFuncCode">
        <query>
            <![CDATA[select count(*) from SysFunc as sf  where sf.code =:code]]>
        </query>
    </named-query>
</entity-mappings>
